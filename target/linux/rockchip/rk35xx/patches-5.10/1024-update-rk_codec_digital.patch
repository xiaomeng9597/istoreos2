From e712c247b0e760bba53164d212838b4e6ab34ba7 Mon Sep 17 00:00:00 2001
From: Liangbin Lian <jjm2473@gmail.com>
Date: Wed, 27 Dec 2023 17:38:29 +0800
Subject: [PATCH] rk_codec_digital: update

---
 sound/soc/codecs/rk_codec_digital.c | 8 ++++----
 sound/soc/codecs/rk_codec_digital.h | 9 +++++++--
 2 files changed, 11 insertions(+), 6 deletions(-)

--- a/sound/soc/codecs/rk_codec_digital.c
+++ b/sound/soc/codecs/rk_codec_digital.c
@@ -407,13 +407,13 @@ static int rk_codec_digital_set_clk_sync
 			   ACDCDIG_DACSCLKRXINT_DIV_SCKRXDIV(div_bclk));
 	regmap_update_bits(rcd->regmap, I2S_CKR0,
 			   ACDCDIG_I2S_CKR0_RSD_MASK,
-			   ACDCDIG_I2S_CKR0_RSD(64));
+			   ACDCDIG_I2S_CKR0_RSD_64);
 	regmap_update_bits(rcd->regmap, ADCSCLKTXINT_DIV,
 			   ACDCDIG_ADCSCLKTXINT_DIV_SCKTXDIV_MASK,
 			   ACDCDIG_ADCSCLKTXINT_DIV_SCKTXDIV(div_bclk));
 	regmap_update_bits(rcd->regmap, I2S_CKR0,
 			   ACDCDIG_I2S_CKR0_TSD_MASK,
-			   ACDCDIG_I2S_CKR0_TSD(64));
+			   ACDCDIG_I2S_CKR0_TSD_64);
 
 	return 0;
 }
@@ -450,7 +450,7 @@ static int rk_codec_digital_set_clk(stru
 				   ACDCDIG_DACSCLKRXINT_DIV_SCKRXDIV(div_bclk));
 		regmap_update_bits(rcd->regmap, I2S_CKR0,
 				   ACDCDIG_I2S_CKR0_RSD_MASK,
-				   ACDCDIG_I2S_CKR0_RSD(64));
+				   ACDCDIG_I2S_CKR0_RSD_64);
 	} else {
 		clk_set_rate(rcd->clk_adc, mclk);
 
@@ -464,7 +464,7 @@ static int rk_codec_digital_set_clk(stru
 				   ACDCDIG_ADCSCLKTXINT_DIV_SCKTXDIV(div_bclk));
 		regmap_update_bits(rcd->regmap, I2S_CKR0,
 				   ACDCDIG_I2S_CKR0_TSD_MASK,
-				   ACDCDIG_I2S_CKR0_TSD(64));
+				   ACDCDIG_I2S_CKR0_TSD_64);
 	}
 
 	return 0;
--- a/sound/soc/codecs/rk_codec_digital.h
+++ b/sound/soc/codecs/rk_codec_digital.h
@@ -288,9 +288,14 @@
 #define ACDCDIG_I2S_RXCR1_RCSR_2CH		(0x0 << 6)
 /* I2S_CKR0 */
 #define ACDCDIG_I2S_CKR0_TSD_MASK		GENMASK(1, 0)
-#define ACDCDIG_I2S_CKR0_TSD(x)			((x) << 0)
+#define ACDCDIG_I2S_CKR0_TSD_64			(0 << 0)
+#define ACDCDIG_I2S_CKR0_TSD_128		(1 << 0)
+#define ACDCDIG_I2S_CKR0_TSD_256		(2 << 0)
 #define ACDCDIG_I2S_CKR0_RSD_MASK		GENMASK(3, 2)
-#define ACDCDIG_I2S_CKR0_RSD(x)			((x) << 2)
+#define ACDCDIG_I2S_CKR0_RSD_64			(0 << 2)
+#define ACDCDIG_I2S_CKR0_RSD_128		(1 << 2)
+#define ACDCDIG_I2S_CKR0_RSD_256		(2 << 2)
+
 /* I2S_CKR1 */
 #define ACDCDIG_I2S_CKR1_TLP_MASK		BIT(0)
 #define ACDCDIG_I2S_CKR1_TLP_INVERTED		BIT(0)
